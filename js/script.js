'use strict'


// console.log(Handlebars)


// const about = [
// 	{
// 		name : 'Bond',
// 		number : '007',
// 		work : 'Agent',
// 		img :
// 			'https://signaturebricks.com/media/catalog/product/cache/1/image/946x946/9df78eab33525d08d6e5fb8d27136e95/s/0/s00003-img1.jpg',
// 			isActive:true
// 	},
// 	{
// 		name : 'Bo',
// 		number : '005',
// 		work : 'Agent',
// 		img :
// 			'https://signaturebricks.com/media/catalog/product/cache/1/image/946x946/9df78eab33525d08d6e5fb8d27136e95/s/0/s00003-img1.jpg',
// 			isActive: false
// 	},
// 	{
// 		name : 'Bonda',
// 		number : '001',
// 		work : 'Agent',
// 		img :
// 			'https://signaturebricks.com/media/catalog/product/cache/1/image/946x946/9df78eab33525d08d6e5fb8d27136e95/s/0/s00003-img1.jpg',
// 		isActive: true
// 	}
// ]


// const root = document.querySelector('.root')
// const source = document.querySelector('#about-me').innerHTML.trim();

// console.log(source)

// const nweWrite = Handlebars.compile(source)
// console.log(nweWrite)

// const writeMe = nweWrite(about)
// console.log(writeMe)


// const writeMe = about.reduce((acc, el) => acc + nweWrite(el), '')


// root.insertAdjacentHTML('afterbegin', writeMe)




// console.log(source)

// const writeMyCode = Handlebars.compile(source);
// console.log(writeMyCode)

// const markup = writeMyCode(about)
// console.log(markup)

// root.insertAdjacentHTML('afterbegin', markup);














//--------------------------------


// const list = document.querySelector('.team-list')

// const massHero = [
// 	{name : 'Betmen', hero : 'bird', joyful: true, strength:['black', 'bilioner'] },
// 	{name : 'supermen', hero : 'fly', joyful: false, strength:['fast', 'pritte'] },
// 	{name : 'slash', hero :' children', joyful: true, strength:['boy', 'fast'] }
// ]

// const give = document.querySelector('.team').innerHTML.trim()
// console.log(give)

// const write = Handlebars.compile(give);
// console.log(write)

// const show = write(massHero);

// console.log(show)

// list.insertAdjacentHTML('afterbegin', show)

//--------------------------------------------------









const about = [{
	img : 'https://signaturebricks.com/media/catalog/product/cache/1/image/946x946/9df78eab33525d08d6e5fb8d27136e95/s/0/s00003-img1.jpg',
	name : 'Bond',
	about : 'Agent',
	work : 'killer',
	done : true
},
{
	img : 'https://lc-imageresizer-live-s.legocdn.com/resize/?width=1600&imageUrl=https%3A%2F%2Fwww.lego.com%2Fr%2Fwww%2Fr%2Fportals%2F-%2Fmedia%2Fthemes%2Fmarvel-superheroes%2Fgrown-up%2Fcharacters%2Fspider-man.png%3Fl.r%3D292071479',
	name : 'Spider',
	about : 'Agent',
	work : 'killer',
	done : true
},
{
	img : 'https://img.brickowl.com/files/image_cache/larger/lego-batman-crooked-angry-mouth-with-yellow-utility-belt-minifigure-25.jpg',
	name : 'Batman',
	about : 'Agent',
	work : 'killer',
	done : true
},
{
	img : 'https://img.escapade.co.uk/SALEHIRE/Large/887451-ninja-turtle-michelangelo-2nd-costume-1.jpg',
	name : 'miki',
	about : 'Agent',
	work : 'killer',
	done : true
}]





const box = document.querySelector('#box').innerHTML.trim(),
list = document.querySelector('.list'),
btn = document.querySelector('.btn');

const compik = Handlebars.compile(box)

const newNumber = btn.value;
console.log(newNumber)

const newAbout = about.splice(0,newNumber)

console.log(newAbout)

const res = compik(newAbout)



list.insertAdjacentHTML('afterbegin', res)


console.log(res)





// about.forEach(el => list.insertAdjacentHTML('afterbegin', compik(el)))


//-----------------------

let input = document.querySelector('.input');
let output = document.querySelector('.output')

let voc = {
	name: 'Maksim'
}


// input.addEventListener('keyup', function(){
// 	output.innerHTML = this.value.replace(/\{\{(\w*)\}\}/g, function(value){
// 		return voc[value]
// 	})
// })




input.addEventListener('keyup', function(){
	output.innerHTML = this.value.replace(/\{\{(\w*)\}\}/g, function(value) {
		return voc[value]
	})
})






const text = 'When I started hiring JavaScript developers to build applications, it really struck me how few of them understood how to harness JavaScript to build robust application architecture. With that in mind, I decided to write a book that would cover some JavaScript best practices, introduce people to prototypes, object composition, and at least the basic concepts of functional programming (enough to understand how to build and maintain a typical JavaScript application), and then apply those concepts to building some of the common concerns that spring up in the majority of applications, regardless of the application business domain.';

const pattern = /started/;

console.log(pattern.exec(text))



//-----------------------------




/* –ï—Å—Ç—å –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∏–º—è-—Ç–æ–≤–∞—Ä–∞":"—Ü–µ–Ω–∞ –∑–∞ –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É" */ 
const products = {
    bread: 10,
    milk: 15,
    apples: 20,
    chicken: 50,
    cheese: 40,
  };
  
  /* 
    –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Cashier.
    
    –ü–æ–ª—è –±—É–¥—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∫–∞—Å—Å–∏—Ä–∞ (üîî –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –∫–∞–∫ this.–∏–º—è_–ø–æ–ª—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ): 
      - name - —Å—Ç—Ä–æ–∫–∞, –∏–º—è –∫–∞—Å—Å–∏—Ä–∞, –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
      
      - productDatabase - –æ–±—ä–µ–∫—Ç –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
      
      - customerMoney - —á–∏—Å–ª–æ, —Å—É–º–º–∞ –≤–≤–µ–¥–µ–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–µ–Ω–µ–≥, –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0 
      
      - getCustomerMoney(value) - –º–µ—Ç–æ–¥, –ø–æ–ª—É—á–∞–µ—Ç —á–∏—Å–ª–æ, –¥–µ–Ω—å–≥–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è, –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ –≤ –ø–æ–ª–µ customerMoney.
      
      - countTotalPrice(order) - –º–µ—Ç–æ–¥, –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å–ø–∏—Å–æ–∫–∞ –ø–æ–∫—É–ø–æ–∫, —Å—á–∏—Ç–∞–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫.
        üîî –ö–ª—é—á–∏ –æ–±—ä–µ–∫—Ç–∞ order –µ—Å—Ç—å –≤ –æ–±—ä–µ–∫—Ç–µ productDatabase. –ò–∑ order –±–µ—Ä–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ç–∞,
           –∞ –∏–∑ productDatbase —Ü–µ–Ω—É –∑–∞ –æ–¥–Ω—É —à—Ç—É–∫—É –∏ —É–º–Ω–æ–∂–∞–µ–º, —Ç–∞–∫ –ø–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∑–∞–∫–∞–∑–µ.
           –ß—Ç–æ–±—ã –ø–æ—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∑–∞–∫–∞–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª, –ø–µ—Ä–µ–±—Ä–∞–≤ –≤—Å–µ –∫–ª—é—á–∏ order.
       
      - countChange(totalPrice) - –º–µ—Ç–æ–¥, —Å—á–∏—Ç–∞–µ—Ç —Å–¥–∞—á—É, —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –æ–±—â–µ–π —Å—É–º–º–æ–π –ø–æ–∫—É–ø–æ–∫ –∏ –¥–µ–Ω—å–≥–∞–º–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è.
          * –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ customerMoney –Ω–µ –º–µ–Ω—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ totalPrice
          * –ï—Å–ª–∏ –¥–µ–Ω–µ–≥ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –¥–µ–Ω–µ–≥.
          * –ï—Å–ª–∏ –≤ customerMoney –º–µ–Ω—å—à–µ –¥–µ–Ω–µ–≥ —á–µ–º –≤ totalPrice, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null 
          
      - onSuccess(change) - –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É `–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ ${change}!`.
      
      - onError() - –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É '–û—á–µ–Ω—å –∂–∞–ª—å, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏'   
      
      - reset() - –º–µ—Ç–æ–¥, —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–æ–ª–µ customerMoney 0.
//   */
  
//   function Cashier(name, productDatabase) {
//     // üîî –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ this –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –∏ –º–µ—Ç–æ–¥–∞–º –±—É–¥—É—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
//     this.name = name;
//     this.productDatabase = productDatabase;
//     this.customerMoney = 0;
//     this.getCustomerMoney = function (value) {

//       this.customerMoney = this.customerMoney + value;
//   }
//     this.countTotalPrice = function(order){
//       let summ = 0;
//       for (let key in order){
//         summ += order[key] * productDatabase[key];
//       }
//       return summ
//     }
  
//     this.countChange = function(){
//       if (totalPrice <= this.customerMoney) {
//         return   this.customerMoney - totalPrice
//     } else {
//         return null;
//     }
//     }
//     this.onSuccess = function(change){console.log(`–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ ${change}!`)}
//     this.onError = function(change){console.log('–û—á–µ–Ω—å –∂–∞–ª—å, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏')};
//     this.reset = function(change){this.customerMoney = 0}

//   }
  
//   /* –ó–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞. "–∏–º—è-–ø—Ä–æ–¥—É–∫—Ç–∞":"–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ-–µ–¥–∏–Ω–∏—Ü" */
//   const order = {
//     bread: 2,
//     milk: 2,
//     apples: 1,
//     cheese: 1
//   };
  
//   /* –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */
//   const mango = new Cashier('Mango', products);
  
//   // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π
//   console.log(mango.name); // Mango
//   console.log(mango.productDatabase); // —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–æ–±—ä–µ–∫—Ç products)
//   console.log(mango.customerMoney); // 0
  
//   // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ countTotalPrice –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—É–º–º—ã
//   // –ø–µ—Ä–µ–¥–∞–≤–∞—è order - —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//   const totalPrice = mango.countTotalPrice(order);
  
//   // –ü—Ä–æ–≤–µ—Ä—è–º —á—Ç–æ –ø–æ—Å—á–∏—Ç–∞–ª–∏
//   console.log(totalPrice); // 110
  
//   // –í—ã–∑—ã–≤–∞–µ–º getCustomerMoney –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–µ–Ω–µ–≥ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
//   mango.getCustomerMoney(310);
  
//   // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ –ø–æ–ª–µ —Å –¥–µ–Ω—å–≥–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//   console.log(mango.customerMoney); // 300
  
//   // –í—ã–∑—ã–≤–∞–µ–º countChange –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å–¥–∞—á–∏
//   const change = mango.countChange();
  
//   // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–º –≤–µ—Ä–Ω—É–ª countChange
//   console.log(change); // 190
  
//   // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥—Å—á–µ—Ç–∞ –¥–µ–Ω–µ–≥
//   if(change !== null) {
//      // –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ onSuccess
//     mango.onSuccess(change); // –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, –≤–∞—à–∞ —Å–¥–∞—á–∞ 190
//   } else {
//     // –ü—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ onError   
//     mango.onError(); // –û—á–µ–Ω—å –∂–∞–ª—å, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø–æ–∫—É–ø–∫–∏
//   }
  
//   // –í—ã–∑—ã–≤–∞–µ–º reset –ø—Ä–∏ –ª—é–±–æ–º –∏—Å—Ö–æ–¥–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
//   mango.reset();
  
//   // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Å–ª–µ reset
//   console.log(mango.customerMoney); // 0


const key = '+38 (068) 8132740'

const word = /\d/;


console.log(word.match(key))